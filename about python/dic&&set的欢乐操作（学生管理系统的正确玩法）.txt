
         dict  （使用方法&注意事项）

 用Python写一个dict如下：

>>> d = {'Michael': 95, 'Bob': 75, 'Tracy': 85}
>>> d['Michael']
95


1.【放入】 把数据放入dict的方法，除了初始化时指定外，还可以通过key放入：

>>> d['Adam'] = 67
>>> d['Adam']
67

2. 【更改】由于一个key只能对应一个value，所以，多次对一个key放入value，后面的值会把前面的值冲掉：
>>> d['Jack'] = 90
>>> d['Jack']
90
>>> d['Jack'] = 88
>>> d['Jack']
88

3.【检测】 要避免key不存在的错误，有两种办法，一是通过in判断key是否存在：
>>> 'Thomas' in d
 二是通过dict提供的get()方法，如果key不存在，可以返回None，或者自己指定的value：
>>> d.get('Thomas')
>>> d.get('Thomas', -1)
-1

4.【删除】要删除一个key，用pop(key)方法，对应的value也会从dict中删除：
>>> d.pop('Bob')
75
>>> d
{'Michael': 95, 'Tracy': 85}



dict内部存放的顺序和key放入的顺序是没有关系的

和list比较，dict 查找和插入的速度极快，不会随着key的增加而变慢；
需要占用大量的内存，内存浪费多。所以，dict是用空间来换取时间的一种方法。

dict可以用在需要高速查找的很多地方，在Python代码中几乎无处不在，正确使用dict非常重要，需要牢记的第一条就是 dict的key必须是不可变对象 。
     ↓
因为dict根据key来计算value的存储位置，如果每次计算相同的key得出的结果不同，那dict内部就完全混乱了。这个通过key计算位置的算法称为哈希算法（Hash）。
要保证hash的正确性，作为key的对象就不能变。在Python中，字符串、整数等都是不可变的，因此，可以放心地作为key。而list是可变的，就不能作为key：
>>> key = [1, 2, 3]
>>> d[key] = 'a list'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unhashable type: 'list'


     set

set和dict类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在set中，没有重复的key。

要创建一个set，需要提供一个list作为输入集合：

>>> s = set([1, 2, 3])
>>> s
{1, 2, 3}
注意，传入的参数[1, 2, 3]是一个list，而显示的{1, 2, 3}只是告诉你这个set内部有1，2，3这3个元素，显示的顺序也不表示set是有序的。。

重复元素在set中自动被过滤：

>>> s = set([1, 1, 2, 2, 3, 3])
>>> s
{1, 2, 3}


通过add(key)方法可以添加元素到set中，可以重复添加，但不会有效果：

>>> s.add(4)
>>> s
{1, 2, 3, 4}
>>> s.add(4)
>>> s
{1, 2, 3, 4}
通过remove(key)方法可以删除元素：

>>> s.remove(4)
>>> s
{1, 2, 3}

set可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集、并集等操作：

>>> s1 = set([1, 2, 3])
>>> s2 = set([2, 3, 4])
>>> s1 & s2
{2, 3}
>>> s1 | s2
{1, 2, 3, 4}
set和dict的唯一区别仅在于没有存储对应的value，但是，set的原理和dict一样，所以，同样不可以放入可变对象，因为无法判断两个可变对象是否相等，也就无法保证set内部“不会有重复元素”。试试把list放入set，看看是否会报错



小结

使用key-value存储结构的dict在Python中非常有用，选择不可变对象作为key很重要，最常用的key是字符串。

tuple虽然是不变对象，但试试把(1, 2, 3)和(1, [2, 3])放入dict或set中，并解释结果。






（伪）习题[改自评论区某同学]：

grade={'他':75,'她':80,'它':90}
go=input('欢迎使用大学成绩登记查询系统！进入系统请按y，请按任意键课退出\n')
while go=='y':
    menu=['1.录入','2.查询','3.修改','4.学生列表','5.退出']
    for features in menu:
        print(features)
    ord=int(input('请输入你想要的操作序号:'))
    if ord==1:
        user=input('请输入需要录入的姓名:')
        grade[user]=int(input('请输入成绩:'))
        print('成绩录入完成，正在返回\n')
    elif ord==2:
        user=input('请输入需要查询的学生姓名：')
        if user in grade:
            print('%s的成绩为：'%user,grade[user])
            exit=input('\n查询完毕，输入y继续查询，输入n退出本系统 \n 。')
        else:
            print('查无此人，请重新输入')
            continue 
        if exit=='n':
            print('已退出系统，欢迎再次使用')
        else:
            continue
    elif ord==3:
        user=input('请输入需要进行成绩修改的学生姓名：')
        if user in grade:
            grade[user]=input('请输入正确的成绩：')
            exit=input('修改完毕，输入y继续查询  \n若想退出本系统请按任意键。')
            if exit=='y':
                continue
            else:
                break
        else:
            print('查无此人，请重新修改\n\n')
            continue
    elif ord==4:
        for key in grade:
            print(key)
        print('\n\n')
    elif ord==5:
        print('已退出系统，欢迎再次使用\n')
        break
    else:
        print('输入错误，请重新输入\n\n')
        continue

微修的最终效果：
grade={'michael':95,'bob':97,'tracy':85}
go=input('欢迎使用成绩查询系统  进入系统请按y，否则按任意键退出\n')
while go =='y':
  menu=('1.录入','2.查询','3.修改','4.学生列表','5.退出')
  for features in menu:
  	print(features)
  ord=int(input('请输入命令序号：'))
  if ord==1:
  	user=input('请输入需要输入的姓名：')
  	grade[user]=int(input('请输入成绩：'))   #这里曾出现拼写错误，记得以后最好跟修正来（调成英文即可）
   	print('录入完成 \n')
  elif ord==2:
  	user=input('请输入需要查询的姓名：')
  	if user in grade:
  		print('%s的成绩为：'%user,gread[user])
  		exit=input('\n *查询完毕，输任意键继续，输入n退出* \n')
  	else:
  		print('查无此人，请重新输入')
  		continue
  	if exit=='n':
  		print('欢迎再次使用')
  	else:
  		continue
  elif ord==3:
  	user=input('请输入需要进行成绩修改的学生的姓名')
  	if user in grade:
  		grade[user]=('请输入正确的成绩：')
  		exit=input('修改完毕，输入y键继续\n 输任意键退出')
  		if exit=='y':
  			continue
  		else: break
  elif ord==4:
  		for key in grade:
  			print(key)
  			print('\n\n')
  elif ord==5:
  		print('已退出系统，欢迎再次使用（晚安）\n')
  		break
  else:
  	print('输入错误，请重试\n\n')
  	continue


